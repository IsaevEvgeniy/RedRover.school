1.1. Тестирование программного обеспечения (Software Testing) – это процесс оценки работы системы с целью выявления дефектов и проверки соответствия требованиям. Оно помогает убедиться, что продукт работает корректно, стабильно и удобно для пользователя.

1.2. Цели тестирования:
        Обнаружение дефектов – выявление ошибок, сбоев и несоответствий, которые могут привести к некорректной работе системы. Чем раньше найдены баги, тем дешевле их исправление.
        Подтверждение соответствия требованиям – проверка того, что продукт отвечает заявленным спецификациям, бизнес-логике и ожиданиям заказчика.
        Обеспечение стабильности работы – анализ поведения системы в различных условиях, включая высокие нагрузки, работу на разных устройствах и в разных браузерах.
        Снижение рисков – тестирование помогает не только минимизировать вероятность появления критических ошибок после релиза, но и определить их возможные последствия, снижая финансовые и репутационные потери.
        Оптимизация пользовательского опыта – выявление проблем, связанных с удобством интерфейса и логикой взаимодействия, что повышает удовлетворенность конечных пользователей.
        Сокращение затрат на разработку – исправление дефектов на ранних этапах разработки обходится дешевле, чем после выпуска продукта.
        Контроль качества на всех этапах жизненного цикла – тестирование позволяет отслеживать изменения продукта от ранних прототипов до финального релиза, обеспечивая высокое качество на каждом этапе.

1.3. Тестирование / контроль качества / обеспечение качества.
        Тестирование – это одна из составляющих контроля качества. Оно представляет собой процесс проверки работоспособности системы в различных условиях. Testing позволяет обнаружить ошибки, недочеты и сбои в работе приложения.
        Контроль качества - это процесс проверки готового продукта на соответствие требованиям. QC включает тестирование, аудит кода, анализ документации и проверку соответствия стандартам.
        Обеспечение качества - это комплекс мер, направленный на предотвращение ошибок и обеспечение стабильности разработки. Основная задача QA – выстроить эффективные процессы, которые минимизируют вероятность появления дефектов еще на этапе проектирования продукта.

1.4. Ошибка / дефект / отказ.
        Ошибка (Error) – это некорректное действие человека на этапе проектирования, разработки или тестирования, которое может привести к неисправности в системе.
        Когда возникает? В процессе написания кода, анализа требований или настройки системы.
        Пример: Разработчик неправильно указал логику расчета налога, аналитик неверно интерпретировал требования заказчика.
        Ошибка – это корень проблемы, но она не всегда приводит к багу.

        Дефект (Defect, Bug) – это несовершенство в программном коде, архитектуре или настройках системы, вызывающее отклонение от ожидаемого поведения.
        Когда возникает? Когда ошибка разработчика попадает в код и сохраняется в продукте.
        Пример: В интернет-магазине скидка рассчитывается неправильно, так как в коде заложена ошибочная формула.
        Дефект может существовать в коде, но оставаться незамеченным до тестирования или выхода продукта в продакшен.

        Отказ (Failure) – это фактическое проявление дефекта в работе системы, которое приводит к сбоям, ошибкам или некорректному результату.
        Когда возникает? Когда пользователь или тестировщик сталкивается с некорректным поведением программы.
        Пример: Пользователь пытается добавить товар в корзину, но кнопка не работает из-за ошибочного кода.
        Не каждый дефект приводит к отказу, но каждый отказ вызван дефектом.

